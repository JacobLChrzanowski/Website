services:
  web:
    build:
      context: .
      target: builder
      dockerfile: Dockerfile.web4
    container_name: inacanoe-web
    image: inacanoe-qa-web
    command: ["prod"]
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    ports:
      - 5010:5010
    volumes:
      - ./web_src:/project/web_src:ro
      - ./scripts/uwsgi.ini:/etc/uwsgi/uwsgi.ini:ro
      # - ./scripts/shared_entrypoint.sh:/project/shared_entrypoint.sh:ro
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres_db:
        condition: service_started

  redis:
    image: redislabs/redismod
    container_name: inacanoe-qa-redis
    ports:
      - '6379:6379'
    volumes:
      - ./data/redis_storage:/data
    # https://stackoverflow.com/questions/31746182/
    # https://stackoverflow.com/questions/67904609/
    # healthcheck:
    #   test: "exit 0"

  postgres_db:
    image: "postgres"
    container_name: inacanoe-qa-postgres
    ports:
      - '5432:5432'
      - '8080:8080'
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    user: ${POSTGRES_CONTAINER_USERID}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    # health_check does not work here because pg_isready has
    # no clue what to do when container is executing as user
    # other than root